<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/halo">
	
		<fx:Script>
			<![CDATA[
				import flash.events.MouseEvent;
				
				import mx.collections.ArrayCollection;
				
				import spark.components.supportClasses.ItemRenderer;
				import spark.events.RendererExistenceEvent;
				
				[Bindable]
				public var dataProvider:ArrayCollection;
				
				private var currentSelectedRenderer:ItemRenderer;
				
				private function onRendererAdd(event:RendererExistenceEvent):void
				{
					(event.renderer as ItemRenderer).addEventListener(MouseEvent.CLICK, onRendererClick);
				}
				
				private function onRendererRemove(event:RendererExistenceEvent):void
				{
					(event.renderer as ItemRenderer).removeEventListener(MouseEvent.CLICK, onRendererClick);
				}
				
				private function onRendererClick(e:MouseEvent):void
				{
					if(this.currentSelectedRenderer != null)
						this.currentSelectedRenderer.selected = false;
					this.currentSelectedRenderer = e.target as ItemRenderer; 
					this.currentSelectedRenderer.selected = true;
				}
			]]>
		</fx:Script>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="white" />
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="black" />
		</s:stroke>
	</s:Rect>
	
	<s:DataGroup id="pdmlStackList" dataProvider="{this.dataProvider}"
				 itemRenderer="{new ClassFactory(PdmlRenderer)}"
				 rendererAdd="onRendererAdd(event)"
				 rendererRemove="onRendererRemove(event)">
		<s:layout>
			<s:VerticalLayout gap="1" />
		</s:layout>		
	</s:DataGroup>
	
</s:Group>
