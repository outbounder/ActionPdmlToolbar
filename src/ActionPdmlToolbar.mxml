<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/halo"
					   xmlns:pdml="components.pdml.*"
					   minWidth="300"
					   minHeight="500"
					   width="100%"
					   height="100%"
					   preinitialize="onPreinitialize()"
					   creationComplete="onCreationComplete()"
					   mouseDown="onMouseDown(event)" >
	
	<fx:Style>
		
		@namespace "library://ns.adobe.com/flex/spark";
		WindowedApplication 
		{
			skinClass: ClassReference("skins.AppSkin");
		}
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import data.model.PdmlFile;
			
			import flash.Boot;
			import flash.display.Screen;
			import flash.events.DataEvent;
			import flash.events.MouseEvent;
			
			import haxe.org.dassista.api.rest.as3.RestService;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.DragManager;
			
			[Bindable]
			private var pdmlStack:ArrayCollection;
			
			private function onPreinitialize():void
			{
				var boot:Boot = new Boot(this.stage as MovieClip); // haxe boot
			}
			
			private function onCreationComplete():void
			{
				this.alwaysInFront = true;
				this.nativeWindow.x = Screen.mainScreen.visibleBounds.width-this.nativeWindow.width;
				this.nativeWindow.y = (Screen.mainScreen.visibleBounds.height-this.nativeWindow.height)/2;
				
				this.addEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, onNativeDragEnter);
				this.addEventListener(NativeDragEvent.NATIVE_DRAG_DROP, onNativeDragDrop);
				
				this.pdmlStack = new ArrayCollection();
			}
		
			private function onMouseDown(event:MouseEvent):void
			{
				if(event.type == MouseEvent.RIGHT_MOUSE_DOWN)
					this.nativeWindow.startMove();
			}
			
			private function onNativeDragEnter(e:NativeDragEvent):void
			{
				if(e.clipboard.hasFormat('air:file list'))
				{
					var fileList:Array = e.clipboard.getData('air:file list') as Array;
					if(fileList.length == 1)
						DragManager.acceptDragDrop(this);
				}
			}
			
			private function onNativeDragDrop(e:NativeDragEvent):void
			{
				if(e.clipboard.hasFormat('air:file list'))
				{
					var fileList:Array = e.clipboard.getData('air:file list') as Array;
					var draggedFile:File = fileList[0] as File;
					var getClassPath:RestService = new RestService();
					getClassPath.setValue("module", "haxe.org.dassista.tools.RepoInfo");
					getClassPath.setValue("method", "getClassPath");
					getClassPath.setValue("target", draggedFile.nativePath);
					getClassPath.load(onGetClassPathResult);
					cursorManager.setBusyCursor();
					//this.pdmlStack.addItem(new PdmlFile(draggedFile.nativePath));
				}
			}
			
			private function onGetClassPathResult(e:DataEvent):void
			{
				cursorManager.removeBusyCursor();
				
				var dataXML:XML = XML(e.data);
				if(dataXML.name()=="ioerror")
				{
					Alert.show(e.data);
					return;
				}
				
				this.pdmlStack.addItem(new PdmlFile(dataXML.text()));
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" >
		<s:Button label="->" width="100%" />
		<mx:VDividedBox width="100%" height="100%">
			<pdml:PdmlStack width="100%" dataProvider="{this.pdmlStack}"/>
			<s:List width="100%" height="100%">
				<s:dataProvider>
					<s:ArrayList>
						<fx:String>php.restService</fx:String>
						<fx:String>org.rtdc</fx:String>
					</s:ArrayList>
				</s:dataProvider>
			</s:List>
		</mx:VDividedBox>
	</s:VGroup>
	
</s:WindowedApplication>
